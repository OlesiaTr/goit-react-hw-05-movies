{"version":3,"file":"static/js/387.984fc42b.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.js","services/posterTemplate.js","services/movieDatabaseAPI.js"],"sourcesContent":["// Utils\nimport styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const Poster = styled.div`\n  width: 200px;\n`;\n","// Core\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\n\n// API\nimport { getCastInfo } from 'services/movieDatabaseAPI';\n\n// Components\nimport { Loader } from 'components/Loader';\n\n// Styles\nimport { Container, Poster } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const cast = await getCastInfo(movieId);\n        setCast(cast);\n        setLoading(false);\n      } catch {\n        setError('Oops, something went wrong. Please, try reloading the page!');\n      }\n    };\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <Container>\n        {cast.map(({ name, id, poster, character }) => (\n          <li key={id}>\n            <Poster>\n              <img src={poster} alt={name} />\n            </Poster>\n            <p style={{ fontWeight: 'bold', marginBottom: '5px' }}>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </Container>\n\n      <Toaster position=\"top-right\" />\n    </>\n  );\n};\nexport default Cast;\n","// Utils\nimport { Rings } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Rings\n      height=\"200\"\n      width=\"200\"\n      color=\"#fb6d3a\"\n      radius=\"6\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"rings-loading\"\n    />\n  );\n};\n","export const posterTemplate = poster => {\n  if (!poster) return 'https://www.movienewz.com/img/films/poster-holder.jpg';\n  return `https://image.tmdb.org/t/p/w300/${poster}`;\n};\n","// Utils\nimport axios from 'axios';\nimport { posterTemplate } from './posterTemplate';\n\n// Setups\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  api_key: process.env.REACT_APP_MOVIE_DATABASE,\n  language: 'en-US',\n  include_adult: false,\n};\n\n// HTTP requests\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day?', { params });\n  return normalizedData(data.results);\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get('/search/movie?', {\n    params: { query, ...params },\n  });\n  return normalizedData(data.results);\n};\n\nexport const getPrimaryInfo = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  const {\n    id,\n    original_title,\n    poster_path,\n    title,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n\n  return {\n    id,\n    title: title ?? original_title,\n    poster: posterTemplate(poster_path),\n    vote: vote_average ? vote_average.toFixed(1) : 'No score yet',\n    overview: overview ? overview : \"Sorry, we don't have an overview yet\",\n    genres: genres\n      ? genres.map(genre => genre.name).join(', ')\n      : \"Genres weren't added yet\",\n  };\n};\n\nexport const getCastInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`, { params });\n  return normalizedCast(data.cast);\n};\n\nexport const getReviewsInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`, { params });\n  return data.results;\n};\n\nconst normalizedData = movies =>\n  movies.map(\n    ({\n      id,\n      original_title,\n      poster_path,\n      title,\n      vote_average,\n      overview,\n      genres,\n    }) => ({\n      id,\n      title: title ?? original_title,\n      poster: posterTemplate(poster_path),\n      vote: vote_average ? vote_average.toFixed(1) : 'No score yet',\n      overview: overview ? overview : \"Sorry, we don't have an overview yet\",\n      genres: genres\n        ? genres.map(genre => genre.name).join(', ')\n        : \"Genres weren't added yet\",\n    })\n  );\n\nconst normalizedCast = cast =>\n  cast.map(({ id, original_name, profile_path, character }) => ({\n    id,\n    name: original_name,\n    poster: posterTemplate(profile_path),\n    character,\n  }));\n"],"names":["Container","styled","Poster","useState","cast","setCast","loading","setLoading","error","setError","movieId","useParams","useEffect","toast","getCast","getCastInfo","Loader","map","name","id","poster","character","src","alt","style","fontWeight","marginBottom","position","height","width","color","radius","wrapperStyle","top","left","transform","wrapperClass","visible","ariaLabel","posterTemplate","axios","params","api_key","process","language","include_adult","getTrendingMovies","data","normalizedData","results","getMovieByName","query","getPrimaryInfo","original_title","poster_path","title","vote_average","overview","genres","vote","toFixed","genre","join","normalizedCast","getReviewsInfo","movies","original_name","profile_path"],"sourceRoot":""}