{"version":3,"file":"static/js/415.f4d8319e.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/movieDatabaseAPI.js","services/posterTemplate.js"],"sourcesContent":["// Utils\nimport { Rings } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Rings\n      height=\"200\"\n      width=\"200\"\n      color=\"#fb6d3a\"\n      radius=\"6\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"rings-loading\"\n    />\n  );\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const CardWrapper = styled.li`\n  border-radius: 4px;\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n`;\n","// Core\nimport { Link, useLocation } from 'react-router-dom';\n\n// Utils\nimport PropTypes from 'prop-types';\nimport { posterTemplate } from 'services/posterTemplate';\n\n// Styles\nimport { Container, CardWrapper, MovieName } from './MoviesList.styled';\n\nexport const MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {data.map(({ id, original_title, poster_path, name }) => (\n        <CardWrapper key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={posterTemplate(poster_path)}\n              alt={original_title ?? name}\n            />\n            <MovieName>{original_title ?? name}</MovieName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","// Core\nimport { useState, useEffect } from 'react';\n\n// Utils\nimport { toast, Toaster } from 'react-hot-toast';\n\n// API\nimport { getTrendingMovies } from 'services/movieDatabaseAPI';\n\n// Components\nimport { Loader } from 'components/Loader';\nimport { MoviesList } from 'components/MoviesList';\n\nconst Home = () => {\n  const [trending, setTrending] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const { results } = await getTrendingMovies();\n        setTrending(results);\n        setLoading(false);\n      } catch {\n        setError('Oops, something went wrong. Please, try again later!');\n      }\n    };\n\n    getMovies();\n  }, []);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <main>\n      <h1 style={{ textAlign: 'center', marginBottom: '10px' }}>\n        Trending movies today\n      </h1>\n\n      {loading && <Loader />}\n\n      {trending && <MoviesList data={trending} />}\n\n      <Toaster position=\"top-right\" />\n    </main>\n  );\n};\n\nexport default Home;\n","// Utils\nimport axios from 'axios';\n\n// Setups\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  api_key: `${process.env.REACT_APP_MOVIE_DATABASE}`,\n  language: 'en-US',\n  include_adult: false,\n};\n\n// HTTP requests\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day?', { params });\n  return data;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get('/search/movie?', {\n    params: { query, ...params },\n  });\n  return data;\n};\n\nexport const getPrimaryInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}`, { params });\n  return data;\n};\n\nexport const getCastInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`, { params });\n  return data;\n};\n\nexport const getReviewsInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`, { params });\n  return data;\n};\n","export const posterTemplate = poster => {\n  if (!poster) return 'https://www.movienewz.com/img/films/poster-holder.jpg';\n  return `https://image.tmdb.org/t/p/w300/${poster}`;\n};\n"],"names":["Loader","height","width","color","radius","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","Container","styled","CardWrapper","MovieName","MoviesList","data","location","useLocation","map","id","original_title","poster_path","name","to","state","from","src","posterTemplate","alt","useState","trending","setTrending","loading","setLoading","error","setError","useEffect","getMovies","getTrendingMovies","results","toast","style","textAlign","marginBottom","axios","params","api_key","process","language","include_adult","getMovieByName","query","getPrimaryInfo","getCastInfo","getReviewsInfo","poster"],"sourceRoot":""}