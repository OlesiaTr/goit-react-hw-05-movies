{"version":3,"file":"static/js/675.368e69ba.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/posterTemplate.js","services/movieDatabaseAPI.js"],"sourcesContent":["// Utils\nimport { Rings } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Rings\n      height=\"200\"\n      width=\"200\"\n      color=\"#fb6d3a\"\n      radius=\"6\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"rings-loading\"\n    />\n  );\n};\n","// Core\nimport { Link } from 'react-router-dom';\n\n// Utils\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n\n  padding: 8px 0;\n\n  color: inherit;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: rgb(251, 109, 58);\n  }\n`;\n","// Utils\nimport { HiArrowLeft } from 'react-icons/hi';\n\n// Styles\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  gap: 30px;\n\n  margin-bottom: 20px;\n`;\n\nexport const Poster = styled.div`\n  width: 300px;\n`;\n\nexport const InfoBlock = styled.div`\n  width: 600px;\n\n  > p {\n    margin-top: 10px;\n    margin-bottom: 30px;\n  }\n`;\n","// Utils\nimport PropTypes from 'prop-types';\n\n// Styles\nimport { InfoWrap, Poster, InfoBlock } from './MovieInfo.styled';\n\nexport const MovieInfo = ({\n  movie: { poster, vote, overview, genres, title },\n}) => {\n  return (\n    <InfoWrap>\n      <Poster>\n        <img src={poster} alt={title} />\n      </Poster>\n      <InfoBlock>\n        <h1>{title}</h1>\n        <p>User Score: {vote}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres}</p>\n      </InfoBlock>\n    </InfoWrap>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","// Core\nimport { Link } from 'react-router-dom';\n\n// Utils\nimport styled from 'styled-components';\n\nexport const SubPageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n\n  padding: 8px 0;\n\n  color: inherit;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: rgb(251, 109, 58);\n  }\n`;\n","// Core\nimport { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\n\n// API\nimport { getPrimaryInfo } from 'services/movieDatabaseAPI';\n\n// Components\nimport { Loader } from 'components/Loader';\nimport { BackLink } from 'components/BackLink';\nimport { MovieInfo } from 'components/MovieInfo';\n\n// Styles\nimport { SubPageWrapper, StyledLink } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const data = await getPrimaryInfo(movieId);\n        setMovie(data);\n        setLoading(false);\n      } catch {\n        setError(\"Sorry, the movie wasn't foundðŸ˜–\");\n      }\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <main>\n      {loading && <Loader />}\n\n      {!error && !loading && (\n        <BackLink to={backLinkHref}>Back to movies list</BackLink>\n      )}\n\n      {!error && !loading && movie && <MovieInfo movie={movie} />}\n\n      {!error && !loading && (\n        <SubPageWrapper>\n          <h2>Additional Information:</h2>\n          <ul>\n            <li>\n              <StyledLink to=\"cast\" state={{ from: backLinkHref }}>\n                Learn more about the cast\n              </StyledLink>\n            </li>\n            <li>\n              <StyledLink to=\"reviews\" state={{ from: backLinkHref }}>\n                Go through the reviews\n              </StyledLink>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </SubPageWrapper>\n      )}\n\n      <Toaster position=\"top-right\" />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","export const posterTemplate = poster => {\n  if (!poster) return 'https://www.movienewz.com/img/films/poster-holder.jpg';\n  return `https://image.tmdb.org/t/p/w300/${poster}`;\n};\n","// Utils\nimport axios from 'axios';\nimport { posterTemplate } from './posterTemplate';\n\n// Setups\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  api_key: process.env.REACT_APP_MOVIE_DATABASE,\n  language: 'en-US',\n  include_adult: false,\n};\n\n// HTTP requests\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day?', { params });\n  return normalizedData(data.results);\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get('/search/movie?', {\n    params: { query, ...params },\n  });\n  return normalizedData(data.results);\n};\n\nexport const getPrimaryInfo = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  const {\n    id,\n    original_title,\n    poster_path,\n    title,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n\n  return {\n    id,\n    title: title ?? original_title,\n    poster: posterTemplate(poster_path),\n    vote: vote_average ? vote_average.toFixed(1) : 'No score yet',\n    overview: overview ? overview : \"Sorry, we don't have an overview yet\",\n    genres: genres\n      ? genres.map(genre => genre.name).join(', ')\n      : \"Genres weren't added yet\",\n  };\n};\n\nexport const getCastInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`, { params });\n  return normalizedCast(data.cast);\n};\n\nexport const getReviewsInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`, { params });\n  return data.results;\n};\n\nconst normalizedData = movies =>\n  movies.map(\n    ({\n      id,\n      original_title,\n      poster_path,\n      title,\n      vote_average,\n      overview,\n      genres,\n    }) => ({\n      id,\n      title: title ?? original_title,\n      poster: posterTemplate(poster_path),\n      vote: vote_average ? vote_average.toFixed(1) : 'No score yet',\n      overview: overview ? overview : \"Sorry, we don't have an overview yet\",\n      genres: genres\n        ? genres.map(genre => genre.name).join(', ')\n        : \"Genres weren't added yet\",\n    })\n  );\n\nconst normalizedCast = cast =>\n  cast.map(({ id, original_name, profile_path, character }) => ({\n    id,\n    name: original_name,\n    poster: posterTemplate(profile_path),\n    character,\n  }));\n"],"names":["Loader","height","width","color","radius","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","StyledLink","styled","Link","BackLink","to","children","size","InfoWrap","Poster","InfoBlock","MovieInfo","movie","poster","vote","overview","genres","title","src","alt","SubPageWrapper","useState","setMovie","loading","setLoading","error","setError","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","toast","getMovie","getPrimaryInfo","data","Suspense","fallback","posterTemplate","axios","params","api_key","process","language","include_adult","getTrendingMovies","normalizedData","results","getMovieByName","query","id","original_title","poster_path","vote_average","toFixed","map","genre","name","join","getCastInfo","normalizedCast","cast","getReviewsInfo","movies","original_name","profile_path","character"],"sourceRoot":""}