{"version":3,"file":"static/js/415.2012b99b.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/posterTemplate.js","services/movieDatabaseAPI.js"],"sourcesContent":["// Utils\nimport { Rings } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Rings\n      height=\"200\"\n      width=\"200\"\n      color=\"#fb6d3a\"\n      radius=\"6\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"rings-loading\"\n    />\n  );\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const CardWrapper = styled.li`\n  border-radius: 4px;\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n`;\n","// Core\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// Styles\nimport { Container, CardWrapper, MovieName } from './MoviesList.styled';\n\nexport const MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {data.map(({ id, title, poster }) => (\n        <CardWrapper key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img src={poster} alt={title} />\n            <MovieName>{title}</MovieName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","// Core\nimport { useState, useEffect } from 'react';\nimport { toast, Toaster } from 'react-hot-toast';\n\n// API\nimport { getTrendingMovies } from 'services/movieDatabaseAPI';\n\n// Components\nimport { Loader } from 'components/Loader';\nimport { MoviesList } from 'components/MoviesList';\n\nconst Home = () => {\n  const [trending, setTrending] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const results = await getTrendingMovies();\n        setTrending(results);\n        setLoading(false);\n      } catch {\n        setError('Oops, something went wrong. Please, try again later!');\n      }\n    };\n\n    getMovies();\n  }, []);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  if (loading) return <Loader />;\n  if (error) return <Toaster position=\"top-right\" />;\n\n  return (\n    <>\n      <h1 style={{ textAlign: 'center', marginBottom: '10px' }}>\n        Trending movies today\n      </h1>\n\n      {trending && <MoviesList data={trending} />}\n    </>\n  );\n};\n\nexport default Home;\n","export const posterTemplate = poster => {\n  if (!poster) return 'https://www.movienewz.com/img/films/poster-holder.jpg';\n  return `https://image.tmdb.org/t/p/w300/${poster}`;\n};\n","// Utils\nimport axios from 'axios';\nimport { posterTemplate } from './posterTemplate';\n\n// Setups\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  api_key: process.env.REACT_APP_MOVIE_DATABASE,\n  language: 'en-US',\n  include_adult: false,\n};\n\n// HTTP requests\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day?', { params });\n  return normalizedData(data.results);\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get('/search/movie?', {\n    params: { query, ...params },\n  });\n  return normalizedData(data.results);\n};\n\nexport const getPrimaryInfo = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  const {\n    id,\n    original_title,\n    poster_path,\n    title,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n\n  return {\n    id,\n    title: title ?? original_title,\n    poster: posterTemplate(poster_path),\n    vote: vote_average ? vote_average.toFixed(1) : 'No score yet',\n    overview: overview ? overview : \"Sorry, we don't have an overview yet\",\n    genres: genres\n      ? genres.map(genre => genre.name).join(', ')\n      : \"Genres weren't added yet\",\n  };\n};\n\nexport const getCastInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`, { params });\n  return normalizedCast(data.cast);\n};\n\nexport const getReviewsInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`, { params });\n  return data.results;\n};\n\nconst normalizedData = movies =>\n  movies.map(\n    ({\n      id,\n      original_title,\n      poster_path,\n      title,\n      vote_average,\n      overview,\n      genres,\n    }) => ({\n      id,\n      title: title ?? original_title,\n      poster: posterTemplate(poster_path),\n      vote: vote_average ? vote_average.toFixed(1) : 'No score yet',\n      overview: overview ? overview : \"Sorry, we don't have an overview yet\",\n      genres: genres\n        ? genres.map(genre => genre.name).join(', ')\n        : \"Genres weren't added yet\",\n    })\n  );\n\nconst normalizedCast = cast =>\n  cast.map(({ id, original_name, profile_path, character }) => ({\n    id,\n    name: original_name,\n    poster: posterTemplate(profile_path),\n    character,\n  }));\n"],"names":["Loader","height","width","color","radius","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","Container","styled","CardWrapper","MovieName","MoviesList","data","location","useLocation","map","id","title","poster","to","state","from","src","alt","useState","trending","setTrending","loading","setLoading","error","setError","useEffect","getMovies","getTrendingMovies","results","toast","style","textAlign","marginBottom","posterTemplate","axios","params","api_key","process","language","include_adult","normalizedData","getMovieByName","query","getPrimaryInfo","movieId","original_title","poster_path","vote_average","overview","genres","vote","toFixed","genre","name","join","getCastInfo","normalizedCast","cast","getReviewsInfo","movies","original_name","profile_path","character"],"sourceRoot":""}