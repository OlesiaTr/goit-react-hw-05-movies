{"version":3,"file":"static/js/186.4c199f8d.chunk.js","mappings":"8LAGaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,OAAO,IACPC,aAAc,CACZC,SAAU,QACVC,IAAK,MACLC,KAAM,OACNC,UAAW,yBAEbC,aAAa,GACbC,SAAS,EACTC,UAAU,iBAGf,C,kICuCD,UA/CgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,sGAEfN,GAAW,GACXE,EAAS,IAHM,UAIWK,EAAAA,EAAAA,IAAeJ,GAJ1B,gBAIPK,EAJO,EAIPA,QACRV,EAAWU,GACXR,GAAW,GANI,kDAQfE,EAAS,wDARM,0DAAH,qDAYhBI,GACD,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACHJ,GACLQ,EAAAA,GAAAA,MAAYR,EACb,GAAE,CAACA,KAGF,gCACGF,IAAW,SAAC,IAAD,IAEXF,EAAQa,OAAS,GAChBb,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACV,4BACE,gBAAIC,MAAO,CAAEC,WAAY,OAAQC,aAAc,OAA/C,qBACWL,MAEX,uBAAIE,MAJID,EADA,KASd,SAAC,KAAD,CAASxB,SAAS,gBAGvB,C,4MCtDD6B,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbC,QAAQ,GAAD,OAAKC,oCACZC,SAAU,QACVC,eAAe,GAIJC,EAAiB,mCAAG,sGACRN,EAAAA,EAAAA,IAAU,uBAAwB,CAAEC,OAAAA,IAD5B,uBACvBM,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAAAA,EAAAA,IAAU,iBAAkB,CACjDC,QAAO,QAAGQ,MAAAA,GAAUR,KAFM,uBACpBM,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdG,EAAc,mCAAG,WAAMf,GAAN,yFACLK,EAAAA,EAAAA,IAAA,iBAAoBL,GAAM,CAAEM,OAAAA,IADvB,uBACpBM,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAW,mCAAG,WAAMhB,GAAN,yFACFK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,aAAmC,CAAEM,OAAAA,IADnC,uBACjBM,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXlB,EAAc,mCAAG,WAAMM,GAAN,yFACLK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,aAAmC,CAAEM,OAAAA,IADhC,uBACpBM,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qD","sources":["components/Loader/Loader.js","components/Reviews/Reviews.jsx","services/movieDatabaseAPI.js"],"sourcesContent":["// Utils\nimport { Rings } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Rings\n      height=\"200\"\n      width=\"200\"\n      color=\"#fb6d3a\"\n      radius=\"6\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"rings-loading\"\n    />\n  );\n};\n","// Core\nimport { useState, useEffect } from 'react';\n\n// Utils\nimport { toast, Toaster } from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\n\n// API\nimport { getReviewsInfo } from 'services/movieDatabaseAPI';\n\n// Components\nimport { Loader } from 'components/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const { results } = await getReviewsInfo(movieId);\n        setReviews(results);\n        setLoading(false);\n      } catch {\n        setError('Oops, something went wrong. Please, try again later!');\n      }\n    };\n\n    getReviews();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      {reviews.length > 0 &&\n        reviews.map(({ author, id, content }) => (\n          <div key={id}>\n            <h3 style={{ fontWeight: 'bold', marginBottom: '5px' }}>\n              Author: {author}\n            </h3>\n            <p>{content}</p>\n          </div>\n        ))}\n\n      <Toaster position=\"top-right\" />\n    </>\n  );\n};\n\nexport default Reviews;\n","// Utils\nimport axios from 'axios';\n\n// Setups\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  api_key: `${process.env.REACT_APP_MOVIE_DATABASE}`,\n  language: 'en-US',\n  include_adult: false,\n};\n\n// HTTP requests\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day?', { params });\n  return data;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get('/search/movie?', {\n    params: { query, ...params },\n  });\n  return data;\n};\n\nexport const getPrimaryInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}`, { params });\n  return data;\n};\n\nexport const getCastInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`, { params });\n  return data;\n};\n\nexport const getReviewsInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`, { params });\n  return data;\n};\n"],"names":["Loader","height","width","color","radius","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","getReviews","getReviewsInfo","results","toast","length","map","author","id","content","style","fontWeight","marginBottom","axios","params","api_key","process","language","include_adult","getTrendingMovies","data","getMovieByName","query","getPrimaryInfo","getCastInfo"],"sourceRoot":""}