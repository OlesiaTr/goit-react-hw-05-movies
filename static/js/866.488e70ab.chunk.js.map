{"version":3,"file":"static/js/866.488e70ab.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/movieDatabaseAPI.js","services/posterTemplate.js"],"sourcesContent":["// Utils\nimport { Rings } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Rings\n      height=\"200\"\n      width=\"200\"\n      color=\"#fb6d3a\"\n      radius=\"6\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"rings-loading\"\n    />\n  );\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const CardWrapper = styled.li`\n  border-radius: 4px;\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n`;\n","// Core\nimport { Link, useLocation } from 'react-router-dom';\n\n// Utils\nimport PropTypes from 'prop-types';\nimport { posterTemplate } from 'services/posterTemplate';\n\n// Styles\nimport { Container, CardWrapper, MovieName } from './MoviesList.styled';\n\nexport const MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {data.map(({ id, original_title, poster_path, name }) => (\n        <CardWrapper key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={posterTemplate(poster_path)}\n              alt={original_title ?? name}\n            />\n            <MovieName>{original_title ?? name}</MovieName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","// Utils\nimport styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","// Styles\nimport { Wrapper, Input, Icon } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n","// Core\nimport { useState, useEffect } from 'react';\n\n// Utils\nimport { useSearchParams } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\n\n// API\nimport { getMovieByName } from 'services/movieDatabaseAPI';\n\n// Components\nimport { SearchBox } from 'components/SearchBox';\nimport { MoviesList } from 'components/MoviesList';\nimport { Loader } from 'components/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  useEffect(() => {\n    if (movieName === '') return;\n\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const data = await getMovieByName(movieName);\n        setMovies(data.results);\n        setLoading(false);\n        if (data.results.length < 1)\n          setError(\n            'Sorry, we didn`t find any movies according to your request.'\n          );\n      } catch {\n        setError('Sorry, something went wrong. Try reloading the page!');\n      }\n    };\n\n    getMovies();\n  }, [movieName]);\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      {loading && <Loader />}\n\n      <SearchBox value={movieName} onChange={updateQueryString} />\n      {movies && <MoviesList data={movies} />}\n\n      <Toaster position=\"top-right\" />\n    </main>\n  );\n};\n\nexport default Movies;\n","// Utils\nimport axios from 'axios';\n\n// Setups\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  api_key: `${process.env.REACT_APP_MOVIE_DATABASE}`,\n  language: 'en-US',\n  include_adult: false,\n};\n\n// HTTP requests\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day?', { params });\n  return data;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get('/search/movie?', {\n    params: { query, ...params },\n  });\n  return data;\n};\n\nexport const getPrimaryInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}`, { params });\n  return data;\n};\n\nexport const getCastInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`, { params });\n  return data;\n};\n\nexport const getReviewsInfo = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`, { params });\n  return data;\n};\n","export const posterTemplate = poster => {\n  if (!poster) return 'https://www.movienewz.com/img/films/poster-holder.jpg';\n  return `https://image.tmdb.org/t/p/w300/${poster}`;\n};\n"],"names":["Loader","height","width","color","radius","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","Container","styled","CardWrapper","MovieName","MoviesList","data","location","useLocation","map","id","original_title","poster_path","name","to","state","from","src","posterTemplate","alt","Wrapper","Input","Icon","HiSearch","SearchBox","value","onChange","type","e","target","useState","movies","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","toast","getMovies","getMovieByName","results","length","axios","params","api_key","process","language","include_adult","getTrendingMovies","query","getPrimaryInfo","getCastInfo","getReviewsInfo","poster"],"sourceRoot":""}